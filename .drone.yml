kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

services:
  - name: postgres
    image: postgres:14
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: postgres
  - name: mongo
    image: mongo:4
    ports:
      - 27017

steps:
  - name: restore-test-cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      restore: true
      archive_format: 'gzip'
      cache_key: 'test:{{ checksum "mix.lock" }}'
      mount:
        - 'deps'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: get-test-deps
    image: elixir:1.13
    environment:
      MIX_ENV: test
    commands:
      - mix local.rebar --force
      - mix local.hex --force
      - mix deps.get
      - mix compile

  - name: rebuild-test-cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      rebuild: true
      archive_format: 'gzip'
      cache_key: 'test:{{ checksum "mix.lock" }}'
      mount:
        - 'deps'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: test
    image: elixir:1.13
    environment:
      MIX_ENV: test
      POSTGRES_HOST: postgres
      MONGO_URL: 'mongodb://mongo:27017/pczone'
    commands:
      - mix local.rebar --force
      - mix local.hex --force
      - mix test

  - name: restore-prod-cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      restore: true
      archive_format: 'gzip'
      cache_key: 'prod:{{ checksum "mix.lock" }}'
      mount:
        - 'deps'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: release
    image: elixir:1.13
    environment:
      MIX_ENV: prod
    commands:
      - mix local.rebar --force
      - mix local.hex --force
      - mix deps.get
      - mix compile
      - mix release

  - name: rebuild-prod-cache
    image: meltwater/drone-cache
    pull: true
    settings:
      backend: 'filesystem'
      rebuild: true
      archive_format: 'gzip'
      cache_key: 'prod:{{ checksum "mix.lock" }}'
      mount:
        - 'deps'
    volumes:
      - name: cache
        path: /tmp/cache

  - name: docker
    image: plugins/docker
    settings:
      registry: registry.buzzmedia.vn
      username: user
      password: password
      repo: registry.buzzmedia.vn/pczone
      tags: latest
      dockerfile: Dockerfile.drone

volumes:
  - name: cache
    host:
      path: /var/lib/cache
